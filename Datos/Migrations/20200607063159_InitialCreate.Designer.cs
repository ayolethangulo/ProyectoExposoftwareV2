// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(ExposoftwareContext))]
    [Migration("20200607063159_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Area", b =>
                {
                    b.Property<string>("IdArea")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdArea");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Entity.Asignatura", b =>
                {
                    b.Property<string>("IdAsignatura")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NombreArea")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdAsignatura");

                    b.ToTable("Asignaturas");
                });

            modelBuilder.Entity("Entity.Calificacion", b =>
                {
                    b.Property<int>("IdCalificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProyecto")
                        .HasColumnType("int");

                    b.Property<string>("IdRubrica")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdCalificacion");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("Entity.DescripcionCalificacion", b =>
                {
                    b.Property<int>("IdDescripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCalificacion")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDescripcion");

                    b.ToTable("DescripcionesC");
                });

            modelBuilder.Entity("Entity.Docente", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreArea")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Perfil")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoDocente")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Identificacion");

                    b.ToTable("Docentes");
                });

            modelBuilder.Entity("Entity.Estudiante", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Identificacion");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Entity.Inscripcion", b =>
                {
                    b.Property<int>("IdInscripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estudiante1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estudiante10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estudiante2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estudiante3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estudiante4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estudiante5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estudiante6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estudiante7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estudiante8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estudiante9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProyecto")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInscripcion");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("Entity.ItemsRubrica", b =>
                {
                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdRubrica")
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Item");

                    b.ToTable("ItemsRubricas");
                });

            modelBuilder.Entity("Entity.Pendon", b =>
                {
                    b.Property<int>("IdPendon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conclusion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdProyecto")
                        .HasColumnType("int");

                    b.Property<string>("Introduccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metodologia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objetivos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPendon");

                    b.ToTable("Pendons");
                });

            modelBuilder.Entity("Entity.Proyecto", b =>
                {
                    b.Property<int>("IdProyecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asignatura")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estudiante1")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Estudiante2")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Metodologia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resumen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semestre")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdProyecto");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("Entity.Rubrica", b =>
                {
                    b.Property<string>("IdRubrica")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("IdArea")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdRubrica");

                    b.ToTable("Rubricas");
                });

            modelBuilder.Entity("Entity.Usuario", b =>
                {
                    b.Property<string>("User")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TipoDocente")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("User");

                    b.ToTable("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
